from langchain_groq import ChatGroq
from dotenv import load_dotenv
from typing import Annotated, Literal, Optional, TypedDict
from pydantic import BaseModel, Field

load_dotenv()

llm = ChatGroq(
    model="llama-3.1-8b-instant"
    )

# schema
class sentimental_analysis(BaseModel):
    key_values : list[str] = Field(description=" write all the key points mentioned in the given review in the list format")
    full_summary : str = Field(description=" give a brief summary of the given review")
    sentimental_analysis_1 : Literal["Positive","Negative"] = Field(description="provide the sentimental of the given review in positive or negative sense")
    positive_points : Optional[list[str]] = Field(description="provide allthe positive points mentioned in the given review", default=None)
    negative_points : Optional[list[str]] = Field(description="provide allthe negative points mentioned in the given review", default=None)

new_llm = llm.with_structured_output(sentimental_analysis)

query = input("Enter the review : ")

output = new_llm.invoke(query)

print(output)
